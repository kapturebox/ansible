---

# tasks file for ansible/roles/initial-setup
- name: ensure system is up to date
  apt: upgrade=full update_cache=yes
  when: upgrade_dist
  register: system_upgraded
  notify: restart kapture

- name: rotate openssh host keys
  shell: rm -rf /etc/ssh/ssh_host_* && dpkg-reconfigure openssh-server
  when: pi is defined and pi

- name: expand root partition
  command: raspi-config --expand-rootfs
  when: ansible_lsb.id == "Raspbian"

- name: ensure that we have enough power for usb disks (max_usb_current)
  lineinfile:
    dest: /boot/config.txt
    insertbefore: BOF
    line: max_usb_current=1
  when: pi is defined and pi

- name: disable lightdm on boot
  service:
    name: lightdm
    enabled: no
  when: ansible_lsb.codename == "xenial"

- name: setup initial needed packages
  apt: pkg="{{ item }}" state=present force=yes
  with_items:
    - python2.7-dev
    - apt-transport-https
    - usbmount
    - libffi-dev
    - libssl-dev
    - iptables-persistent
    - acl
    - cpufreqd
    - cpufrequtils
    - vim

- name: ensure kapture group is setup correctly
  group: name=kapture system=yes state=present

- name: ensure kapture user is created
  user:
    groups: kapture
    name: "{{ kapture_user }}"
    createhome: yes
    home: /var/lib/kapture
    state: present

- name: add public ssh keys
  authorized_key:
    user: "{{ ansible_ssh_user }}"
    state: present
    key: "{{ item }}"
  with_items: "{{ ssh_authorized_keys }}"
  when: pi is defined and pi

- name: modify admin user [{{ ansible_ssh_user }}] if xenial and pi
  user:
    user: "{{ ansible_ssh_user }}"
    password: "{{ initial_user_password }}"
    state: present
  when: pi is defined and pi

- name: change storage path if running via vagrant
  set_fact: storage_block_device=/dev/sdb
  when: vagrant is defined and vagrant

# not the best way to check for this stuff, especially with multiple drives.
# works in the meantime though
# eventually i'd like to use lvm and you add a disk and it'll automatically be added to the lvm layer
- name: get usb disk mount status
  shell: "mountpoint -q {{ storage_path }}0"
  ignore_errors: true
  register: storage_mount_stat

- name: setup disk if needed
  include: setup-disk.yml
  when: storage_mount_stat.rc != 0

- name: set permissions on root
  file:
    path: "{{ storage_path }}0"
    owner: root
    group: kapture
    mode: o+rwx,g+rwxs,o=rx
    state: directory
  tags:
    - perms

- name: make directories
  file:
    state: directory
    path: "{{ storage_path }}/{{ item }}"
    owner: "{{ kapture_user }}"
    group: kapture
    mode: o+rwx,g+rwxs,o=rx
    recurse: yes
  with_items: "{{ storage_directories }}"
  tags:
    - perms

- name: setfacl on directories
  acl:
    default: yes
    state: present
    path: "{{ storage_path }}/{{ item }}"
    entity: kapture
    etype: group
    permissions: rwx
  with_items: "{{ storage_directories }}"
  tags:
    - perms
