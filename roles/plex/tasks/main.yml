---
# tasks file for roles/plex


#######################
### PLEX STUFF
#######################


- name: install pip from apt
  apt: pkg=python-pip state=present
  when: ansible_lsb.id != "Raspbian"

- block:
    - name: install pip using easy_install if Raspbian
      apt: name=python-setuptools state=present
    - name: ensure pip is installed via easy_install
      easy_install: name=pip state=present
  when: ansible_lsb.id == "Raspbian"

- name: install httplib2 for calling plex commands via ansible
  pip: name=httplib2

# start using the api from plex to get the package
- name: install plex prereqs
  apt: 
    pkg: "{{ item }}" 
    state: latest 
  with_items:
    - libc6
    - curl
    - libav-tools

- name: install plex if on x86 system
  include: x86_install.yml
  when: "'x86' in ansible_architecture"

- name: install plex on arm system
  include: armv7_install.yml
  when: ansible_architecture == 'armv7l'

- name: ensure service is running
  service: name=plexmediaserver state=running

- name: wait for plex to be instanciated
  wait_for: port=32400 host=localhost state=started

- name: get plex api token if it exists
  shell: >
    grep -q PlexOnlineToken /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml 
    && sed -En 's/.*PlexOnlineToken="([^"]+)".*/\1/p' /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml
  ignore_errors: true
  register: plex_token

- name: set plex token header
  set_fact:
    curl_plex_token_header: "-H 'X-Plex-Token: {{ plex_token.stdout }}'"
  when: plex_token.stdout

- name: apply some plex settings
  command: >
    curl 
    {{ curl_plex_token_header | default('') }}
    -XPUT
    http://localhost:32400/:/prefs?{{item.key}}={{item.value}}
  with_items:
    - { key: FSEventLibraryUpdatesEnabled,     value: true }
    - { key: FSEventLibraryPartialScanEnabled, value: true }
    - { key: watchMusicSections,               value: true }
    - { key: allowMediaDeletion,               value: true }
    - { key: EnableIPv6,                       value: true }
    - { key: collectUsageData,                 value: false }
    - { key: TranscoderQuality,                value: 1 }
    # ensure that EULA for Plex is presented to user so we dont violate their terms
    - { key: AcceptedEULA,                     value: true }
    - { key: FriendlyName,                     value: "kapture" }
    # - { key: logDebug,                         value: true }

# weird delay required for plex folder setup..
- pause: seconds=60


- name: check to see if plex folders is already setup
  command: > 
    curl {{ curl_plex_token_header | default('') }} http://localhost:32400/library/sections
  register: plex_folder_response

- name: setup folders on disk within plex
  command: >
    curl 
    {{ curl_plex_token_header | default('') }} 
    -XPOST 
    -s 
    http://localhost:32400/library/sections?name={{folder.name}}&type={{folder.type}}&location={{folder.location}}&agent={{folder.agent}}&scanner={{folder.scanner}}&language=en
  with_items:
    - name: Movies
      location: "{{ download_path }}/movies"
      type: movie
      agent: com.plexapp.agents.imdb
      scanner: Plex%20Movie%20Scanner
    - name: Other
      location: "{{ download_path }}/downloads"
      type: movie
      agent: com.plexapp.agents.imdb
      scanner: Plex%20Movie%20Scanner
    - name: TV%20Shows
      location: "{{ download_path }}/tvshows"
      type: show
      agent: com.plexapp.agents.thetvdb
      scanner: Plex%20Series%20Scanner
    - name: Music
      location: "{{ download_path }}/music"
      type: artist
      agent: com.plexapp.agents.lastfm
      scanner: Plex%20Music%20Scanner
    - name: Photos
      location: "{{ download_path }}/photos"
      type: photo
      agent: com.plexapp.agents.none
      scanner: Plex%20Photo%20Scanner
  when: folder.location not in plex_folder_response.stdout
  loop_control: 
    loop_var: folder

- name: install conversion script (convert-avi-to-x264.sh) for if plex cant convert on the fly
  copy:
    src: convert-avi-to-x264.sh
    dest: /usr/local/bin/convert-avi-to-x264.sh
    mode: 0755
    owner: root
    group: root
